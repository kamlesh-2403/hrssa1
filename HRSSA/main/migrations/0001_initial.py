# Generated by Django 3.1.2 on 2020-10-06 15:18

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user_name', models.CharField(max_length=200, null=True)),
                ('first_name', models.CharField(max_length=200, null=True)),
                ('last_name', models.CharField(max_length=200, null=True)),
                ('email', models.TextField(unique=True)),
                ('mobile', models.BigIntegerField(null=True, unique=True)),
                ('password', models.CharField(max_length=100)),
                ('dob', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(max_length=100, null=True)),
                ('profile_path', models.URLField(blank=True, null=True)),
                ('lang_preference', models.CharField(blank=True, choices=[('English', 'English'), ('Hindi', 'Hindi')], max_length=10, null=True)),
                ('genre_preference', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, choices=[('Big Band', 'Big Band'), ('Blues Contemporary', 'Blues Contemporary'), ('Country Traditional', 'Country Traditional'), ('Dance', 'Dance'), ('Electronica', 'Electronica'), ('Experimental', 'Experimental'), ('Folk International', 'Folk International'), ('Gospel', 'Gospel'), ('Grunge Emo', 'Grunge Emo'), ('Hip Hop Rap', 'Hip Hop Rap'), ('Jazz Classic', 'Jazz Classic'), ('Metal Alternative', 'Metal Alternative'), ('Metal Death', 'Metal Death'), ('Metal Heavy', 'Metal Heavy'), ('Pop Contemporary', 'Pop Contemporary'), ('Pop Indie', 'Pop Indie'), ('Pop Latin', 'Pop Latin'), ('Punk', 'Punk'), ('Reggae', 'Reggae'), ('Rock Alternative', 'Rock Alternative'), ('Rock College', 'Rock College'), ('Rock Contemporary', 'Rock Contemporary'), ('Rock Hard', 'Rock Hard'), ('Rock Neo Psychedelia', 'Rock Neo Psychedelia')], max_length=40, null=True), blank=True, default=list, size=None)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('artist_name', models.CharField(max_length=1000)),
                ('artist_image', models.URLField(blank=True, null=True)),
            ],
            options={
                'db_table': 'artist',
            },
        ),
        migrations.CreateModel(
            name='Song',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('song_name', models.CharField(max_length=200)),
                ('album_name', models.CharField(blank=True, max_length=200, null=True)),
                ('poster_path', models.URLField(blank=True, null=True)),
                ('genre_name', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, choices=[('Big Band', 'Big Band'), ('Blues Contemporary', 'Blues Contemporary'), ('Country Traditional', 'Country Traditional'), ('Dance', 'Dance'), ('Electronica', 'Electronica'), ('Experimental', 'Experimental'), ('Folk International', 'Folk International'), ('Gospel', 'Gospel'), ('Grunge Emo', 'Grunge Emo'), ('Hip Hop Rap', 'Hip Hop Rap'), ('Jazz Classic', 'Jazz Classic'), ('Metal Alternative', 'Metal Alternative'), ('Metal Death', 'Metal Death'), ('Metal Heavy', 'Metal Heavy'), ('Pop Contemporary', 'Pop Contemporary'), ('Pop Indie', 'Pop Indie'), ('Pop Latin', 'Pop Latin'), ('Punk', 'Punk'), ('Reggae', 'Reggae'), ('Rock Alternative', 'Rock Alternative'), ('Rock College', 'Rock College'), ('Rock Contemporary', 'Rock Contemporary'), ('Rock Hard', 'Rock Hard'), ('Rock Neo Psychedelia', 'Rock Neo Psychedelia')], max_length=40, null=True), blank=True, size=None)),
                ('artist_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.artist')),
            ],
            options={
                'db_table': 'song',
            },
        ),
        migrations.CreateModel(
            name='SearchHistory',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_hidden', models.BooleanField(default=False)),
                ('history_song', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.song')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('playlist_name', models.CharField(max_length=200, unique=True)),
                ('playlist_pic', models.URLField(blank=True, null=True)),
                ('song', models.ManyToManyField(related_name='songs_in_playlist', to='main.Song')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Otp',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('otp_type', models.CharField(max_length=50)),
                ('otp_code', models.IntegerField()),
                ('is_used', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='otp_set_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'OTP',
            },
        ),
        migrations.CreateModel(
            name='Listing',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('listing_name', models.CharField(max_length=200)),
                ('song', models.ManyToManyField(related_name='trending_songs', to='main.Song')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ListenCount',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('listencount', models.BigIntegerField(null=True, unique=True)),
                ('song', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.song')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ForgotPassword',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('email', models.EmailField(blank=True, max_length=150, null=True)),
                ('mobile', models.BigIntegerField(blank=True, null=True)),
                ('code', models.IntegerField()),
                ('is_used', models.BooleanField(default=False)),
                ('user', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Favourites',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('song', models.ManyToManyField(related_name='favourite_songs', to='main.Song')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='user',
            name='artist_preference',
            field=models.ManyToManyField(blank=True, null=True, related_name='artist_selected', to='main.Artist'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
